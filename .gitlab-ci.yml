variables:
  REGISTRY: ${AWS_ACCOUNT_ID}.dkr.ecr.ap-northeast-1.amazonaws.com
  REPOSITORY: doikota/weather-app
  IMAGE_TAG: 1.0.2
  AWS_IAM_ROLE: arn:aws:iam::718624127210:role/gitlab-openidconnect-role

default:
  image: public.ecr.aws/sam/build-nodejs20.x

stages:
  - Build
  - Assume
  - Container

build:
  stage: Build
  script:
    - npm install -D webpack-cli
    - npm run test
    - npm run build
  artifacts:
    paths:
      - dist/*

assume role:
  stage: Assume
  id_tokens:
    GITLAB_OIDC_TOKEN:
      aud: https://gitlab.com
  script:
    - >
      STS=($(aws sts assume-role-with-web-identity
      --role-arn ${AWS_IAM_ROLE}
      --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}"
      --web-identity-token ${GITLAB_OIDC_TOKEN}
      --duration-seconds 3600
      --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]'
      --output text))
    - export AWS_ACCESS_KEY_ID="${STS[0]}"
    - export AWS_SECRET_ACCESS_KEY="${STS[1]}"
    - export AWS_SESSION_TOKEN="${STS[2]}"
    - aws sts get-caller-identity

container:
  stage: Container
  services:
    - docker:24.0
  script:
    - aws ecr get-login-password --region ap-northeast-1
    - docker build . -t $REPOSITORY
    - docker tag $REPOSITORY:latest $REGISTRY/$REPOSITORY:$IMAGE_TAG
    - docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
