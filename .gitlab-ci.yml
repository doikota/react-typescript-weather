variables:
  # AWS_ACCOUNT_ID: $AWS_ACCOUNT_ID in Settings > CICD
  REGISTRY: $AWS_ACCOUNT_ID.dkr.ecr.ap-northeast-1.amazonaws.com
  REPOSITORY: doikota/weather-app
  IMAGE_TAG: 1.0.6
  AWS_IAM_ROLE: arn:aws:iam::$AWS_ACCOUNT_ID:role/gitlab-openidconnect-role

stages:
  # - Build
  - Container

# build:
#   stage: Build
#   image: public.ecr.aws/sam/build-nodejs20.x
#   script:
#     - npm install -D webpack-cli
#     - npm run test
#     - npm run build
#   artifacts:
#     paths:
#       - dist/*

container:
  stage: Container
  image:
    name: docker:latest
  services:
    - docker:dind
  script:
    - apk add --no-cache aws-cli
    - >
      STS=$(aws sts assume-role-with-web-identity
      --role-arn ${AWS_IAM_ROLE}
      --role-session-name "GitLabRunner-${CI_PROJECT_ID}-${CI_PIPELINE_ID}"
      --web-identity-token ${GITLAB_OIDC_TOKEN}
      --duration-seconds 3600
      --query 'Credentials.[AccessKeyId,SecretAccessKey,SessionToken]'
      --output text)
    - echo STS
    - export AWS_ACCESS_KEY_ID="${STS[0]}"
    - export AWS_SECRET_ACCESS_KEY="${STS[1]}"
    - export AWS_SESSION_TOKEN="${STS[2]}"
    - aws sts get-caller-identity
    - aws ecr get-login-password --region ap-northeast-1 | docker login --username AWS --password-stdin $REGISTRY
    # - docker build . -t $REPOSITORY
    # - docker tag $REPOSITORY:latest $REGISTRY/$REPOSITORY:$IMAGE_TAG
    # - docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
